class TrieNode:
    def __init__(self):
        self.child={}
        self.isEnd=False


class Trie:

    def __init__(self):
      
        self.root=TrieNode()

    def insert(self, word: str) -> None:
        current=self.root
        for ch in word:
            if ch not in current.child:
                current.child[ch]=TrieNode()
            current= current.child[ch]
        current.isEnd=True        

    def search(self, word: str) -> bool:
        current=self.root
        for ch in word:
            if ch not in current.child:
                return False
            current= current.child[ch]
        return current.isEnd      
        

    def startsWith(self, prefix: str) -> bool:
        current=self.root
        for ch in prefix:
            if ch not in current.child:
                return False
            current= current.child[ch]
        return True 